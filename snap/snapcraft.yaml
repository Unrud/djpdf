# Build by running "snapcraft".

# WARNING:
# Snapcraft uses caching for already build steps but it's buggy and can cause strange problems.
# Clean the cache by running "snapcraft clean".

name: djpdf
license: GPL-3.0+
grade: stable
adopt-info: djpdf

base: core20
confinement: strict

architectures:
  - build-on: amd64

environment:
  # Qt: Prefer x11 to wayland
  QT_QPA_PLATFORM: xcb;wayland
  # WORKAROUND: Add python modules in Snap to search path
  PYTHONPATH: ${SNAP}/lib/python3.8/site-packages:${SNAP}/usr/lib/python3/dist-packages

apps:
  djpdf:
    command: bin/scans2pdf-gui
    extensions:
      - kde-neon
    common-id: com.github.unrud.djpdf
    desktop: usr/share/applications/com.github.unrud.djpdf.desktop

parts:
  jbig2enc:
    plugin: autotools
    source: https://github.com/agl/jbig2enc/archive/refs/tags/0.29.tar.gz
    source-type: tar
    source-checksum: sha256/bfcf0d0448ee36046af6c776c7271cd5a644855723f0a832d1c0db4de3c21280
    autotools-configure-parameters:
      # WORKAROUND: Install to /usr instead of /usr/local because it's not in search paths
      - --prefix=/usr
    build-packages:
      - g++
      - libleptonica-dev
      - zlib1g-dev
    stage-packages:
      - liblept5
      - zlib1g
    override-build: |
      ./autogen.sh
      snapcraftctl build

  imagemagick:
    plugin: autotools
    source: https://github.com/ImageMagick/ImageMagick/archive/refs/tags/7.1.1-11.tar.gz
    source-type: tar
    source-checksum: sha256/98bb2783da7d5b06e7543529bd07b50d034fba611ff15e8817a0f4f73957d934
    autotools-configure-parameters:
      # WORKAROUND: Install to /usr instead of /usr/local because it's not in search paths
      - --prefix=/usr
    build-packages:
      - libjpeg-dev
      - libpng-dev
      - libtiff-dev
      - libwebp-dev
      - libopenjp2-7-dev
    stage-packages:
      - libjpeg8
      - libpng16-16
      - libtiff5
      - libwebpmux3
      - libgomp1
      - libwebpdemux2
      - libopenjp2-7

  tesseract:
    plugin: autotools
    source: https://github.com/tesseract-ocr/tesseract/archive/refs/tags/5.3.1.tar.gz
    source-checksum: sha256/3761768c02b99358e5118bfabfecc979fa84a399da5fa54c49dd477d926fef43
    autotools-configure-parameters:
      # WORKAROUND: Fake installation location to find dependencies at runtime
      - --prefix=/snap/djpdf/current/usr
    build-packages:
      - pkg-config
      - libleptonica-dev
    stage-packages:
      - liblept5
    override-build: |
      ./autogen.sh
      snapcraftctl build
    organize:
      # WORKAROUND: Move files from fake installation location to actual target
      snap/djpdf/current/usr: usr

  tessdata:
    plugin: nil
    build-packages: [wget]
    override-pull: |
      wget https://github.com/tesseract-ocr/tessdata_best/raw/4.1.0/eng.traineddata -O eng.traineddata
      wget https://github.com/tesseract-ocr/tessdata_best/raw/4.1.0/chi_sim.traineddata -O chi_sim.traineddata
      wget https://github.com/tesseract-ocr/tessdata_best/raw/4.1.0/hin.traineddata -O hin.traineddata
      wget https://github.com/tesseract-ocr/tessdata_best/raw/4.1.0/spa.traineddata -O spa.traineddata
      wget https://github.com/tesseract-ocr/tessdata_best/raw/4.1.0/fra.traineddata -O fra.traineddata
      wget https://github.com/tesseract-ocr/tessdata_best/raw/4.1.0/ara.traineddata -O ara.traineddata
      wget https://github.com/tesseract-ocr/tessdata_best/raw/4.1.0/rus.traineddata -O rus.traineddata
      wget https://github.com/tesseract-ocr/tessdata_best/raw/4.1.0/por.traineddata -O por.traineddata
      wget https://github.com/tesseract-ocr/tessdata_best/raw/4.1.0/deu.traineddata -O deu.traineddata
      wget https://github.com/tesseract-ocr/tessdata_best/raw/4.1.0/jpn.traineddata -O jpn.traineddata
      wget https://github.com/tesseract-ocr/tessdata_best/raw/4.1.0/osd.traineddata -O osd.traineddata
      echo '8280aed0782fe27257a68ea10fe7ef324ca0f8d85bd2fd145d1c2b560bcb66ba *eng.traineddata
      4fef2d1306c8e87616d4d3e4c6c67faf5d44be3342290cf8f2f0f6e3aa7e735b *chi_sim.traineddata
      bd2e65a2184af08a167b0be2439e91fa5edbc4394399ca2f692b843ae26e78d6 *hin.traineddata
      e2c1ffdad8b30f26c45d4017a9183d3a7f9aa69e59918be4f88b126fac99ab2c *spa.traineddata
      907743d98915c91a3906dfbf6e48b97598346698fe53aaa797e1a064ffcac913 *fra.traineddata
      ab9d157d8e38ca00e7e39c7d5363a5239e053f5b0dbdb3167dde9d8124335896 *ara.traineddata
      b617eb6830ffabaaa795dd87ea7fd251adfe9cf0efe05eb9a2e8128b7728d6b6 *rus.traineddata
      711de9dbb8052067bd42f16b9119967f30bada80d57e2ef24f65d09f531adb04 *por.traineddata
      8407331d6aa0229dc927685c01a7938fc5a641d1a9524f74838cdac599f0d06e *deu.traineddata
      36bdf9ac823f5911e624c30d0553e890b8abc7c31a65b3ef14da943658c40b79 *jpn.traineddata
      9cf5d576fcc47564f11265841e5ca839001e7e6f38ff7f7aacf46d15a96b00ff *osd.traineddata' > SHA256SUMS
      sha256sum -c SHA256SUMS
    override-build: |
      install -Dm0644 -t "${SNAPCRAFT_PART_INSTALL}/usr/share/tessdata" *

  djpdf:
    plugin: python
    source: .
    source-type: git
    python-packages:
      - PySide6<6.5
    stage-packages:
      - python3-pkg-resources
      - qpdf
      - libexempi8
    override-pull: |
      snapcraftctl pull
      # WORKAROUND: Snap breaks rpath with LD_LIBRARY_PATH.
      #             QML2_IMPORT_PATH and QT_PLUGIN_PATH environment variables break Qt bundled with PySide2.
      cat >pyside2-wrapper <<EOF
      #!/bin/bash
      unset QML2_IMPORT_PATH QT_PLUGIN_PATH
      if [ -n "\${LD_LIBRARY_PATH}" ]; then
          LD_LIBRARY_PATH=":\${LD_LIBRARY_PATH}"
      fi
      export LD_LIBRARY_PATH="\${SNAP}/lib/python3.8/site-packages/PySide2/Qt/lib\${LD_LIBRARY_PATH}"
      exec "\${0}.real"
      EOF
      # WORKAROUND: Point icon directly to PNG otherwise snapcraft can't find it
      sed -e 's|Icon=com.github.unrud.djpdf|Icon=/usr/share/icons/hicolor/512x512/apps/com.github.unrud.djpdf.png|' -i desktop/com.github.unrud.djpdf.desktop
    override-build: |
      snapcraftctl build
      install -Dm0644 -t "${SNAPCRAFT_PART_INSTALL}/usr/share/metainfo" desktop/com.github.unrud.djpdf.metainfo.xml
      install -Dm0644 -t "${SNAPCRAFT_PART_INSTALL}/usr/share/applications" desktop/com.github.unrud.djpdf.desktop
      install -Dm0644 desktop/com.github.unrud.djpdf.png "${SNAPCRAFT_PART_INSTALL}/usr/share/icons/hicolor/512x512/apps/com.github.unrud.djpdf.png"
      install -Dm0755 -t "${SNAPCRAFT_PART_INSTALL}/bin" pyside2-wrapper
      # WORKAROUND: Install wrapper for fixing PySide2
      mv "${SNAPCRAFT_PART_INSTALL}/bin/scans2pdf-gui" "${SNAPCRAFT_PART_INSTALL}/bin/scans2pdf-gui.real"
      ln -s pyside2-wrapper "${SNAPCRAFT_PART_INSTALL}/bin/scans2pdf-gui"
      # WORKAROUND: Hardcode libexempi path
      libexempi_path="/snap/djpdf/current/$(realpath --relative-base="${SNAPCRAFT_PART_INSTALL}" "$(find "${SNAPCRAFT_PART_INSTALL}" -name 'libexempi.so*' -print -quit)")"
      sed -e "s|[^=]*find_library('exempi')| '$libexempi_path'|" -i "${SNAPCRAFT_PART_INSTALL}"/lib/python3.*/site-packages/libxmp/exempi.py
    parse-info: [usr/share/metainfo/com.github.unrud.djpdf.metainfo.xml]
    stage:
      # WORKAROUND: Skip venv from python plugin
      - -bin/activate
      - -bin/activate.csh
      - -bin/activate.fish
      - -bin/Activate.ps1
      - -bin/python
      - -bin/python3
      - -pyvenv.cfg
